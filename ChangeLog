2019-04-13  Philippe Troin  <phil@fifi.org>

	* wolpd.c (<config.h>): Must be included first because it may set
	feature macros (_GNU_SOURCE).
	(g_running_user): Create.
	(usage_and_exit, parse_options): Add -s/--setuid option.
	(get_listen_descr): Rename to get_features, add running user info.
	(main): Change uid/gid to --setuid user if requested.
	(g_chroot): Create.
	(usage_and_exit, parse_options): Add -c/--chroot option.
	(main): Process chroot() if requested.  Also connect to syslog
	before chroot.

	* configure.ac: Add AC_USE_SYSTEM_EXTENSIONS to set _GNU_SOURCE
	for us for getresuid().

	* wolpd.c (ATTRIBUTE_UNUSED): Define to __attribute__((unused))
	when gcc is in use.
	(DEFAULT_PORT): Remove, no UDP port default anymore.
	(WOL_MIN_PAYLOAD_SIZE, WOL_MIN_ETHER_RAW_SIZE, WOL_MIN_UDP_SIZE)
	(WOL_MIN_UDP_RAW_SIZE, VALIDATE_RESULTS_ADDRESS_DESCR_SIZE)
	(ETHERTYPE_NO_LISTEN, UDP_PORT_NO_LISTEN, UDP_PORT_LISTEN_ALL)
	(struct validate_results): Create.
	(usage_and_exit, parse_options): Define options -e/--ethertype,
	-E/--no-ether, -u/--udp, -U/--no-udp.
	(parse_uint16): Create.
	(parse_options): Use parse_uint16 when parsing UDP port.
	(setup_udp_filter): Check the frame size against minimums. Only
	filter port if g_udp_port isn't UDP_PORT_LISTEN_ALL.
	(setup_ether_filter, fill_lladdr, forward_packets)
	(validate_ether_packet, forward_ether, validate_udp_packet)
	(forward_udp): Create.
	(main): Create at most 2 input sockets, one for UDP, other for raw
	Ethernet frames.  Allow the UDP and Ethernet sockets to be turned
	on or off.  Allow capture on all UDP ports. Use select() to wait
	for next packet.  Factorize the validation and sending logic to
	forward_packets(), validate_udp_packet.  Factorize output
	link-level header filling to fill_lladdr().  Print a message when
	terminating abnormally.
	(handled_signals, get_listen_descr, handle_signal): Created.
	(forward_packets): Handle EINTR from recv() and sendto().
	(main): Handle EINTR from select().  Establish signal handlers
	for handled_signals that terminate the process cleanly.  Print
	messages on starting and termination.
	(main): Get rid of external/internal nomenclature.

2019-04-12  Philippe Troin  <phil@fifi.org>

	* wolpd.c (setup_filter): Split the udp-specific parsing into
	setup_udp_filter.  Change setup_filter to assemble a preamble
	passed from setup_udp_filter and the payload check before loading
	the BPF program.

	* wolpd.c (setup_filter): Make the payload calculations relative
	to the beginning of the UDP payload by adjusting the X index
	register.

	* wolpd.c (setup_filter): Instead of doing the "jump to end"
	offset calculations by hand, use the biggest jump possible 255 as
	a marker for Jump to END (JEND).
	Before the filter is loaded, make a pass over the BPF program and
	resolve the jump-to-end offsets.

	* .gitignore: Update.

	* Makefile.am (install-data-local uninstall-local): Create.
	(install-data-local-init uninstall-local-init): (Un)install
	systemd service file, or if not found, the init file.
	(install-data-local-sysconfig uninstall-local-sysconfig): Install
	sysconfig file.
	(wolpd.init wolpd.service): Substitute @sysconfdir@.
	(.PHONY): Add (un)install-data-local* targets.

	* wolpd.service.in (EnvironmentFile): Use @sysconfdir@ for the
	sysconfig/wolpd path.

	* wolpd.init.in: Use @sysconfdir@ for the sysconfig/wolpd path.

	* wolpd.service.in (ExecStart): Use @sbindir@.

	* Makefile.am (EXTRA_DIST): Rename wolpd.service to wolpd.service.in.
	(EXTRA_DIST): Add missing wolpd.init.in.
	(generated_files): Add wolpd.service.
	(wolpd.service): Add, generate with sed from .in.

	* wolpd.service: Rename to woldp.service.in.

	* Makefile.am (wolpd.init): Generate wolpd.init from Makefile.
	(generated_files): Add wolpd.init.

	* configure.ac (AC_CONFIG_FILES): Do not use AC_CONFIG_FILES to
	generate wolpd.init.

	* Makefile.am (SUFFIXES): Remove useless SUFFIXES assignment.
	(dist_man8_MANS): Rename to man8_MANS, the generated manpage shouldn't
	be in the source package.
	(generated_files, CLEANFILES): Create.  Remove wolpd.8 on clean.
	(all-local): Create.  Generate $(generated_files) on all-local.
	(wolpd.8): Fix HELP2MAN invocation when building out of tree.

	* wolpd.c (usage_and_exit, parse_options): List and process the
	options in alphabetical order.
	(g_promiscuous): Create.
	(usage_and_exit, parse_options): Add -P/--promiscuous.
	(set_promiscuous): Create.
	(main): Set promiscuous mode if requested.

	* configure.ac (AC_CONFIG_AUX_DIR): Define to config.aux.

	* wolpd.c: Add an emacs local-variables block.
	(parse_options): Handle the -p option.
	(WOL_MIN_UDP_SIZE): Define the minimum UDP WOL packet size,
	including UDP header.
	(WOL_MAGIC_LEN): Use ETH_ALEN instead.
	(DEFAULT_IFACE): Remove.
	(g_iface): Renamed to g_output_iface, don't provide a default.
	(g_input_iface): Created.
	(get_if_index): Factorized the code to get interface index.
	(setup_filter): Created, set-up a BPF filter.
	(main): Full overhaul:
	  o Check that both input and output interfaces have been defined.
	  o Use a raw socket when receiving packets.
	  o Use a BPF filter with full WOL packet validation.
	  o Re-validate the packet after receiving it in userspace.
	  o Simplified re-sending code path, send the full link-layer packet.
	Replace perror() with fprintf() for more detailed messages.

2016-06-02 Federico Simoncelli <federico.simoncelli@gmail.com>

- build: rpm cleanup and initial support for copr
- spec: move wolpd to be a systemd service
- wolpd: handle possible daemon call failure
- build: dropping custom CFLAGS conflicting with ARM
- git: add compile to gitignore
- make: update Makefile.am formatting
- add rpmbuild target, build process cleanup
- add gitignore file
- use daemon function to detach and run in background
- docs: add debugging tips

2010-02-12 Federico Simoncelli <federico.simoncelli@gmail.com>

- version 0.5.0
- improved ethernet frame, add gpl license
- checking wol packet length
- logging after the packet is forwarded
- forwarding raw ethernet frame, improved help strings
- project URL fix
- first commit
